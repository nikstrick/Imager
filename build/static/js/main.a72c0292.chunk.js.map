{"version":3,"sources":["actions/types.js","reducers/memeReducer.js","reducers/index.js","store.js","layout/ImagerNavbar.js","layout/DisplayModal.js","layout/SearchModal.js","actions/memeAction.js","layout/useImageSearch.js","layout/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["GET_MEMES","GET_MEME","ADD_MEME","UPDATE_MEME","initialState","memes","search","combineReducers","meme","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ImagerNavbar","onClickRef","Navbar","color","light","expand","fixed","NavbarBrand","href","Button","onClick","DisplayModal","view","toggle","modal","Modal","isOpen","style","justifyContent","ModalHeader","backgroundColor","title","ModalBody","Container","fluid","padding","maxWidth","maxHeight","src","farm","server","id","secret","alt","connect","getMeme","dispatch","axios","get","then","res","data","catch","err","console","log","owner","caption","url","props","refFeatures","useState","setModal","setView","query","setQuery","safe","setSafe","pageNumber","setPageNumber","api_key","loading","setLoading","error","setError","images","setImages","more","setMore","total","setTotal","useEffect","cancel","method","params","tags","page","per_page","safe_search","format","nojsoncallback","cancelToken","CancelToken","c","stat","prevImage","photos","photo","map","i","length","e","isCancel","useImageSearch","observer","useRef","lastImageRef","useCallback","lastImage","current","disconnect","IntersectionObserver","enteries","isIntersecting","prevPageNumber","observe","className","Row","InputGroup","size","minWidth","marginBottom","marginTop","Input","placeholder","value","onChange","target","InputGroupAddon","addonType","sm","marginLeft","image","index","Col","lg","xs","Card","width","height","CardHeader","CardBody","alignItems","ref","scrollIntoView","behavior","block","paddingInline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a72c0292.chunk.js","sourcesContent":["export const GET_MEMES='GET_MEMES';\r\nexport const GET_MEME='GET_MEME';\r\nexport const ADD_MEME='ADD_MEME';\r\nexport const UPDATE_MEME='UPDATE_MEME';","import{GET_MEMES,GET_MEME,ADD_MEME,UPDATE_MEME} from '../actions/types.js';\r\n\r\n//Initializing React states\r\nconst initialState={\r\n    memes:[],\r\n    search:{},\r\n}\r\n\r\n//Reducer function to implement the changes in front-end using redux state and actions\r\nexport default function memeReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_MEMES:{\r\n            return {\r\n                ...state,\r\n                memes:action.payload,\r\n            }\r\n        }\r\n        case GET_MEME:{\r\n            // console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                search:action.payload\r\n            }\r\n        }\r\n        case ADD_MEME:\r\n            return{\r\n                ...state,\r\n                memes:[action.payload,...state.memes]\r\n            }\r\n        case UPDATE_MEME:\r\n            // const x=state.memes.findIndex(meme=>meme.id===action.payload.id)\r\n            return{\r\n                ...state,\r\n                // memes[x]:action.payload,\r\n                search:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import{combineReducers} from 'redux';\r\nimport memeReducer from './memeReducer';\r\n\r\nexport default combineReducers({\r\n    meme:memeReducer\r\n})","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState={};\r\n\r\nconst middleware=[thunk];\r\n\r\nconst store=createStore(rootReducer,initialState,compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","\r\nimport{\r\n    Navbar,\r\n    NavbarBrand,\r\n    Button\r\n}from 'reactstrap'\r\n\r\nfunction ImagerNavbar({onClickRef}){\r\nreturn(\r\n    <Navbar color=\"warning\" light expand=\"xl\" fixed='top'>\r\n        {/* <Row> */}\r\n        {/* <Col xs=\"12\" sm='6'> */}\r\n        <NavbarBrand href=\"/\"><b>Imager</b></NavbarBrand>\r\n        <Button color=\"warning\" onClick={()=>onClickRef()}>Search</Button>\r\n        {/* </Col> */}\r\n        {/* // </Row> */}\r\n    </Navbar>\r\n)\r\n}\r\nexport default ImagerNavbar;","import React from 'react'\r\nimport{\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Container\r\n} from 'reactstrap'\r\n\r\nexport default function DisplayModal({view,toggle,modal}) {\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}style={{justifyContent:\"space-evenly\"}}>\r\n        <ModalHeader style={{backgroundColor:'gold'}} toggle={toggle}>\r\n        {view.title}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            {/* {view.title} */}\r\n            <Container fluid style={{padding:\"2%\",maxWidth:\"30rem\",maxHeight:\"50rem\"}}>\r\n            <img \r\n            style={{maxWidth:\"25rem\",maxHeight:\"40rem\",padding:'2rem'}}\r\n            src={`https://farm${view.farm}.staticflickr.com/${view.server}/${view.id}_${view.secret}.jpg`}\r\n            alt={view.title} />\r\n            </Container>\r\n        </ModalBody>    \r\n        </Modal>\r\n    )\r\n}\r\n","import React,{useState,useRef,useCallback} from 'react'\r\nimport useImageSearch from './useImageSearch'\r\nimport DisplayModal from './DisplayModal'\r\nimport {\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    Card,\r\n    CardBody,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    CardHeader\r\n}from 'reactstrap'\r\nimport {connect} from 'react-redux';\r\nimport {getMeme} from '../actions/memeAction';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SearchModal(props,refFeatures){\r\n    const [modal, setModal] = useState(false);\r\n    const [view,setView]=useState({ id: 51151464928, owner: \"163606359@N02\", secret: \"106f8b0a16\", server: 65535, farm: 66, title: \"*205*\"});\r\n    \r\n\r\n    //Parameters for Infinite Search\r\n    const [query,setQuery]=useState();\r\n    const [safe,setSafe]=useState(2);\r\n    const [pageNumber,setPageNumber]=useState(1);\r\n\r\n    //React Lifecycle for Infinite Search with states \r\n    const{\r\n        loading,\r\n        error,\r\n        images,\r\n        more,\r\n        total\r\n    }=useImageSearch(query,pageNumber,safe)\r\n\r\n    //Refrencing for Infinite search\r\n    const observer=useRef()\r\n    const lastImageRef=useCallback(lastImage=>{\r\n        if(loading)\r\n        return \r\n        if(observer.current) observer.current.disconnect()\r\n        observer.current= new IntersectionObserver(enteries=>{\r\n            if(enteries[0].isIntersecting && more){\r\n                setPageNumber(prevPageNumber=>prevPageNumber+1)\r\n            }\r\n        })\r\n        if(lastImage) observer.current.observe(lastImage)\r\n    },[loading,more])\r\n\r\n    //Handle the search through Input text\r\n    const handleSearch=(e)=>{\r\n        setQuery(e.target.value)\r\n        setPageNumber(1)\r\n    }\r\n    const toggle = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n        //Defining onClick function for clearing search field\r\n        const onClick=()=>{\r\n            setQuery()\r\n            setPageNumber(1)\r\n        }\r\n        return (\r\n            <div className=\"text-light\">\r\n            <DisplayModal toggle={toggle} modal={modal} view={view}/>\r\n            <Container >\r\n                <Row style={{justifyContent:\"center\"}}>\r\n                    {/* <div ref={refFeatures}> */}\r\n                <InputGroup size=\"sm\" style={{maxWidth:'60%',minWidth:'50%',marginBottom:'5vh',marginTop:'10vh'}}>\r\n                    <Input placeholder=\"Search Images...\"\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={handleSearch} />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button color='danger' sm onClick={onClick}>x</Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n                {/* </div> */}\r\n                </Row>\r\n            </Container>\r\n            <Row style={{justifyContent:'space-evenly'}}>\r\n            <span style={{marginLeft:'2rem'}}>\r\n                Pictures Found: {total}\r\n            </span>\r\n            <Button size=\"sm\" color=\"danger\" onClick={()=>setSafe(safe===1?2:safe===2?3:1)}>safe search</Button>\r\n            </Row>\r\n            <Container fluid>\r\n            <Row> \r\n            {images.map((image,index)=>{\r\n                if(images.length===index+1)\r\n                return (\r\n                <Col lg='4' sm='6' xs ='12' style={{marginTop:'5vh'}}>\r\n                <Container>\r\n                <Card  style={{width:\"300px\",height:\"330px\"}}>\r\n                    <CardHeader>\r\n                    <Button size=\"sm\"  value={\"ok\"} onClick={()=>{setView(image);console.log(image.title);toggle()}} color=\"primary\" key={image.id}>view</Button>\r\n                   \r\n                    </CardHeader>\r\n                        \r\n                    <CardBody>\r\n                        <Container fluid style={{alignItems:\"center\"}}>\r\n                            <img \r\n                                style={{maxWidth:\"200px\",maxHeight:\"250px\"}}\r\n                                alt={image.title} \r\n                                ref={lastImageRef} \r\n                                key={image.id}\r\n                                src={`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`}\r\n                                >\r\n                            </img>\r\n                        </Container>\r\n                    </CardBody>\r\n                </Card>\r\n                </Container>\r\n                </Col>)\r\n                else\r\n                return(\r\n                    <Col lg='4' sm='6' xs ='12' style={{marginTop:'5vh'}}>\r\n                    <Container>\r\n                    <Card  style={{width:\"300px\",height:\"330px\"}}>\r\n                        <CardHeader backgroundColor=\"gold\">\r\n                        <Button size=\"sm\" value={\"ok\"} onClick={()=>{setView(image);console.log(image.title);toggle()}} color=\"primary\" key={image.id} >view</Button>\r\n                        \r\n                        </CardHeader>\r\n                            \r\n                        <CardBody>\r\n                            <Container fluid style={{alignItems:\"center\"}}>\r\n                                <img alt={image.title} \r\n                                    key={image.id}\r\n                                    style={{maxWidth:\"200px\",maxHeight:\"250px\"}}\r\n                                    src={`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`}\r\n                                    >\r\n                                </img>\r\n                            </Container>\r\n                        </CardBody>\r\n                    </Card>\r\n                    </Container>\r\n                    </Col>)\r\n            })}\r\n            </Row>\r\n            </Container>\r\n            <div>{loading&& 'Loading...'}</div>\r\n            <div>{error&& 'Error'}</div>\r\n            </div>\r\n        );\r\n}\r\nSearchModal.propTypes={\r\n    getMeme: PropTypes.func.isRequired,\r\n    meme:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    meme:state.meme,\r\n})\r\nexport default connect(mapStateToProps,{getMeme})(SearchModal)","import {GET_MEMES,GET_MEME,ADD_MEME,UPDATE_MEME} from './types'\r\nimport axios from 'axios';\r\n\r\n//@desc : To get the atmost 100 recent memes\r\nexport const getMemes=()=>(dispatch)=>{\r\n    // console.log(\"OK\");\r\n    axios.get('/memes').then((res)=>{\r\n        // console.log(res.data)\r\n        dispatch({\r\n            type:GET_MEMES,\r\n            payload:res.data\r\n        })    \r\n    });\r\n};\r\n//@desc : To get the meme searched by id\r\nexport const getMeme=(id)=>(dispatch)=>{\r\n    axios.get(`/memes/${id}`).then((res) =>{\r\n        // console.log(res);\r\n        dispatch({\r\n        type: GET_MEME,\r\n        payload: res.data,\r\n        })}\r\n    ).catch((err)=>{\r\n        console.log(err)\r\n        dispatch({\r\n            type:GET_MEME,\r\n            payload:{\r\n                id:0,\r\n                owner:'Not Found',\r\n                caption:'Not Available',\r\n                url:'https://image.shutterstock.com/image-vector/house-not-available-icon-flat-260nw-1030785001.jpg'\r\n            }\r\n        })\r\n    })\r\n}\r\n//@desc : To add a meme\r\nexport const addMeme=(formDATA)=>(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n    //   console.log(formDATA);\r\n    axios.post('/memes',formDATA,config).then((res)=>{\r\n        // console.log(res.data);\r\n        dispatch({\r\n            type:ADD_MEME,\r\n            payload:res.data\r\n        });\r\n        alert(\"Meme Added Succesfully!\")\r\n    }).catch((err)=>{\r\n        alert(\"Meme Already Present!\")\r\n    })\r\n    // return{\r\n    //     type:ADD_MEME,\r\n    //     payload:formDATA\r\n    // }\r\n}\r\n//@desc: To update Meme\r\nexport const updateMeme=(id,editDATA)=>(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n    //   console.log(id)\r\n    //   console.log(editDATA);\r\n    axios.patch(`/memes/${id}`,editDATA,config).then((res)=>{\r\n        // console.log(res.data);\r\n    dispatch({\r\n        type:UPDATE_MEME,\r\n        payload:res.data\r\n    });\r\n    axios.get('/memes').then((res)=>{\r\n        // console.log(res.data)\r\n        dispatch({\r\n            type:GET_MEMES,\r\n            payload:res.data\r\n        })    \r\n    });\r\n    alert(\"Meme Edited Succesfully!\")\r\n    });\r\n}","import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\n\r\n//Custom React hook to produce infinite scroll\r\nexport default function useImageSearch(query,pageNumber,safe) {\r\n    const api_key='a12fcb8f1bf45ea1626eda3353f8077a';\r\n\r\n    //React states for search\r\n    const[loading,setLoading]=useState(true)\r\n    const[error,setError]=useState(false)\r\n    const[images,setImages]=useState([])\r\n    const[more,setMore]=useState(false)\r\n    const[total,setTotal]=useState(0);\r\n\r\n    //React Lifecycle to remove initial serch result\r\n    useEffect(()=>{\r\n        setImages([])\r\n        setTotal(0)\r\n    },[query,safe]) \r\n\r\n    useEffect(()=>{\r\n        let cancel\r\n        //Loading\r\n        setLoading(true)\r\n        //if error\r\n        setError(false)\r\n        if(!query){\r\n            axios({\r\n                method: 'GET',\r\n                url: 'https://www.flickr.com/services/rest/',\r\n                params:{\r\n                    method:'flickr.photos.getRecent',\r\n                    api_key:api_key,\r\n                    page:pageNumber,\r\n                    per_page:15,\r\n                    safe_search:safe,\r\n                    format: 'json',\r\n                    nojsoncallback: 1,\r\n                },\r\n                cancelToken:new axios.CancelToken(c=>cancel=c)\r\n            }).then((res)=>{\r\n                console.log(res.data)\r\n                if(res.data.stat==='ok'){\r\n                setTotal(res.data.photos.total)\r\n                setImages(prevImage=>{\r\n                    return [...prevImage,...res.data.photos.photo.map(i=>i)]\r\n                })\r\n                setMore(res.data.photos.photo.length>0)\r\n                setLoading(false)\r\n            }\r\n            }).catch(e=>{\r\n                if(axios.isCancel(e)) return\r\n                setError(true)\r\n            })\r\n            return ()=>cancel()\r\n        }\r\n        else{\r\n            axios({\r\n                method: 'GET',\r\n                url: 'https://www.flickr.com/services/rest/',\r\n                params:{\r\n                    method:'flickr.photos.search',\r\n                    api_key:api_key,\r\n                    tags:query,\r\n                    page:pageNumber,\r\n                    per_page:15,\r\n                    safe_search:safe,\r\n                    format: 'json',\r\n                    nojsoncallback: 1,\r\n                },\r\n                cancelToken:new axios.CancelToken(c=>cancel=c)\r\n            }).then((res)=>{\r\n                console.log(res.data)\r\n                if(res.data.stat==='ok'){\r\n                setImages(prevImage=>{\r\n                    return [...prevImage,...res.data.photos.photo.map(i=>i)]\r\n                })\r\n                setTotal(res.data.photos.total)\r\n                setMore(res.data.photos.photo.length>0)\r\n                setLoading(false)\r\n            }\r\n            }).catch(e=>{\r\n                if(axios.isCancel(e)) return\r\n                setError(true)\r\n            })\r\n            return ()=>cancel()\r\n        }\r\n    },[query,pageNumber,safe]);\r\n    return {loading,error,images,more,total}\r\n}\r\n","import React,{useRef} from 'react'\r\nimport ImagerNavbar from'./ImagerNavbar'\r\nimport SearchModal from './SearchModal';\r\nimport './landing.css'\r\nimport {\r\n    Container,\r\n    Row,\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\n\r\n//It is the Landing Component of the Imager project\r\nfunction Landing(){\r\n    const refFeatures=useRef(null);\r\n    const onClickRef = () => {\r\n        console.log(\"oK\")\r\n        //.current is verification that your element has rendered\r\n        // if(e){\r\n            refFeatures.current.scrollIntoView({behavior: \"smooth\", block: \"start\"})\r\n        // }\r\n    }\r\n    return(\r\n        <div className=\"bg-gradient-darker\">\r\n            {/* @desc: Brings the Navbar Component  */}\r\n            <ImagerNavbar onClickRef={onClickRef}/>\r\n            <Container style={{marginTop:\"1rem\"}}>\r\n            <Row style={{justifyContent:\"center\",paddingInline:\"5rem\"}}>\r\n            {/* @desc: Brings the SearchModal Component */}\r\n            <SearchModal refFeatures={refFeatures} />\r\n            </Row>\r\n            \r\n            </Container>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n//Maping the state to props\r\nconst mapStateToProps=(state)=>({\r\n    \r\n})\r\nexport default connect(mapStateToProps,{})(Landing);","import {Provider} from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Landing from './layout/Landing.js';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Landing/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}